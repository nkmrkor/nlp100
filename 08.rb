# 08. 暗号文
# 与えられた文字列の各文字を，以下の仕様で変換する関数cipherを実装せよ．
# 英小文字ならば(219 - 文字コード)の文字に置換
# その他の文字はそのまま出力
# この関数を用い，英語のメッセージを暗号化・復号化せよ．

# joinメソッドは、配列の各要素を文字列に変換し、引数sepを区切り文字として結合した文字列を返します。
# bytesメソッドは、文字列中のバイトを繰り返し取り出します。ブロック引数fixnumにバイトのコードを整数で入れながら、バイト数だけブロックを繰り返します。戻り値はレシーバ自身です。
# mapメソッドは、要素の数だけ繰り返しブロックを実行し、ブロックの戻り値を集めた配列を作成して返します
# packメソッドは、引数formatの書式に従って配列の要素からバイト列を作成し、文字列として返します
# C unsigned char (8bit 符号なし整数)
# trメソッドは、文字列の中で引数from_strに並べた文字を引数to_strに並べた文字に置き換え、新しい文字列を返します

CIPHER_TABLE = [*"a".."z"].join.bytes.map{|x|219-x}.pack("C*")
def cipher(str)
  str.tr('a-z', CIPHER_TABLE)
end
str1 = "AaBb"
puts cipher(str1)
